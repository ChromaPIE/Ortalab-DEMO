[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

#Inject for start up
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''boot_timer('splash prep', 'end',1)'''
position = "after"
payload = '''
--Ortalab/Challenge/Support Roster
local support_roster_challenge_config = G.CHALLENGES[get_challenge_int_from_id('c_support_roster')]
if support_roster_challenge_config and support_roster_challenge_config.rules and 
support_roster_challenge_config.rules.custom[1] and support_roster_challenge_config.rules.custom[1].id == 'only_nonscoring_jokers' then
    for k, v in pairs(G.P_CENTERS) do
        if v.set == "Joker" then
            if not table.contains(support_roster_challenge_config.rules.custom[1].unbanned_slugs, k) and not table.contains(G.CHALLENGES[get_challenge_int_from_id('c_support_roster')].restrictions.banned_cards, {id = k}) then 
                table.insert(G.CHALLENGES[get_challenge_int_from_id('c_support_roster')].restrictions.banned_cards, {id = k})
            end
        end
    end
end
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''table.sort(self.P_CENTER_POOLS["Demo"], function (a, b) return a.order + (a.set == 'Joker' and 1000 or 0) < b.order + (b.set == 'Joker' and 1000 or 0) end)'''
position = "after"
payload = '''
--Ortalab/Challenge/Support Roster
local support_roster_challenge_config = G.CHALLENGES[get_challenge_int_from_id('c_support_roster')]
if support_roster_challenge_config and support_roster_challenge_config.rules and 
support_roster_challenge_config.rules.custom[1] and support_roster_challenge_config.rules.custom[1].id == 'only_nonscoring_jokers' then
    for k, v in pairs(G.P_CENTERS) do
        if v.set == "Joker" then
            if not table.contains(support_roster_challenge_config.rules.custom[1].unbanned_slugs, k) and not table.contains(G.CHALLENGES[get_challenge_int_from_id('c_support_roster')].restrictions.banned_cards, {id = k}) then 
                table.insert(G.CHALLENGES[get_challenge_int_from_id('c_support_roster')].restrictions.banned_cards, {id = k})
            end
        end
    end
end
'''
match_indent = true
overwrite = false